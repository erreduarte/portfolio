code_explanation:
  description: >
    This YAML file provides an explanation of the SQL code that calculates and combines
    refunds and returns from ecommerce and subscriptions data.
  steps:
    - step: 1
      description: >
        Create a Common Table Expression (CTE) named `ecommerce_exploded` that explodes
        refund line items from `ecommerce_refunds` and selects relevant fields.
      details:
        - name: ecommerce_exploded
          purpose: >
            Extracts refund details such as order ID, SKU, creation timestamp, and quantity
            from `ecommerce_refunds`.
          fields_extracted:
            - order_id: Order ID
            - SKU: SKU extracted from `exploded_value:line_item:sku`
            - created_at: Creation timestamp of the refund
            - quantity: Quantity of refunded items
          source_table: ecommerce_refunds

    - step: 2
      description: >
        Create a CTE named `ecommerce_returns` that aggregates refund quantities
        from `ecommerce_exploded`.
      details:
        - name: ecommerce_returns
          purpose: >
            Aggregates refund quantities per order ID, SKU, and creation timestamp
            from `ecommerce_exploded`.
          fields_extracted:
            - order_id: Order ID
            - SKU: SKU of the refunded product
            - created_at: Creation timestamp
            - quantity: Total quantity of refunded items (summed)
          source_cte: ecommerce_exploded
          aggregation: Sum of `quantity` grouped by `order_id`, `sku`, `created_at`

    - step: 3
      description: >
        Create a CTE named `subscriptions_a` that retrieves adjustment details
        from `subscriptions_adjustments`, extracting original invoice numbers and quantities.
      details:
        - name: subscriptions_a
          purpose: >
            Extracts adjustment details such as order ID, creation timestamp, description,
            original invoice number, and absolute quantity from `subscriptions_adjustments`.
          fields_extracted:
            - order_id: Order ID (`id`)
            - created_at: Creation timestamp
            - description: Adjustment description
            - original_invoice_number: Extracted from `description` after the first '#'
            - quantity: Absolute value of `quantity`
          source_table: subscriptions_adjustments

    - step: 4
      description: >
        Create a CTE named `subscriptions_returns` that retrieves return details
        from `subscriptions_invoices`, joining with `subscriptions_a` on original invoice numbers.
      details:
        - name: subscriptions_returns
          purpose: >
            Retrieves return details such as order ID, SKU, creation timestamp, and quantity
            from `subscriptions_invoices` and `subscriptions_a`, based on original invoice numbers.
          fields_extracted:
            - order_id: Order ID from `a.order_id`
            - SKU: Product code from `b.line_items:data[0]:product_code`
            - created_at: Creation timestamp from `a.created_at`
            - quantity: Quantity from `a.quantity`
          join_condition: >
            Joins `subscriptions_a` with `subscriptions_invoices` on `original_invoice_number`
          source_tables:
            - subscriptions_a
            - subscriptions_invoices

    - step: 5
      description: >
        Create a CTE named `sales_refunds` that combines refund and return data
        from `ecommerce_returns` and `subscriptions_returns`.
      details:
        - name: sales_refunds
          purpose: >
            Combines refund and return data from both `ecommerce_returns` and `subscriptions_returns`
            CTEs into a single dataset.
          fields_combined: "* (All columns)"
          combined_from_ctes:
            - ecommerce_returns
            - subscriptions_returns

    - step: 6
      description: >
        Execute a final SELECT statement to retrieve all columns from the `sales_refunds`
        CTE, effectively displaying the finalized refund and return data.
      details:
        - purpose: Retrieve all columns from the `sales_refunds` CTE.
        - source_cte: sales_refunds
